{{>partial_header}}
package {{packageName}}

{{#operations}}
import (
	"context"
	"net/http"
{{#imports}}	"{{import}}"
{{/imports}}
)

// {{classname}} is a simple wrapper around the client for {{description}}{{^description}}{{classname}} requests{{/description}}.
type {{classname}} struct {
	client *Client
}

{{#operation}}
{{#notes}}
// {{{unescapedNotes}}}
{{/notes}}
{{^notes}}
// {{nickname}} {{#summary}}{{{summary}}}{{/summary}}{{^summary}}handles {{operationId}}{{/summary}}.
{{/notes}}
func (c *{{classname}}) {{nickname}}(ctx context.Context{{#pathParams}}, {{paramName}} {{dataType}}{{/pathParams}}{{#hasParams}}{{#allParams}}{{^isPathParam}}, {{paramName}} {{dataType}}{{/isPathParam}}{{/allParams}}{{/hasParams}}) {{#returnType}}({{#returnContainer}}[]{{/returnContainer}}{{^returnContainer}}{{^returnTypeIsPrimitive}}*{{/returnTypeIsPrimitive}}{{/returnContainer}}{{returnBaseType}}, error){{/returnType}}{{^returnType}}error{{/returnType}} {
	requestPath := "{{path}}"{{#pathParams}}
	requestPath = strings.Replace(requestPath, "{{{baseName}}}", {{paramName}}, -1){{/pathParams}}

	{{#returnType}}
	{{#returnContainer}}
	return sendRequestParseResponseList[{{returnBaseType}}](
	{{/returnContainer}}
	{{^returnContainer}}
	{{#isResponseFile}}
	return sendRequestParseResponse[{{returnBaseType}}](
	{{/isResponseFile}}
	{{^isResponseFile}}
	{{#returnTypeIsPrimitive}}
	return sendRequestParseResponse[{{returnBaseType}}](
	{{/returnTypeIsPrimitive}}
	{{^returnTypeIsPrimitive}}
	return sendStructuredRequestParseResponse[{{returnBaseType}}](
	{{/returnTypeIsPrimitive}}
	{{/isResponseFile}}
	{{/returnContainer}}
	{{/returnType}}
	{{^returnType}}
	_, err := sendRequestParseResponse[struct{}](
	{{/returnType}}
		ctx,
		c.client,
		http.Method{{httpMethod}},
		requestPath,
		{{#bodyParams}}{{paramName}}{{/bodyParams}}{{^bodyParams}}nil{{/bodyParams}}, // request body
		{{#hasQueryParams}}map[string]string{
		{{#queryParams}}
			"{{baseName}}": {{paramName}},
		{{/queryParams}}
		}{{/hasQueryParams}}{{^hasQueryParams}}nil{{/hasQueryParams}}, // request query parameters
		{{#hasHeaderParams}}map[string]string{
		{{#headerParams}}
			"{{baseName}}": {{paramName}},
		{{/headerParams}}
		}{{/hasHeaderParams}}{{^hasHeaderParams}}nil{{/hasHeaderParams}}, // request headers
	)

	{{^returnType}}
	return err
	{{/returnType}}
}

{{/operation}}
{{/operations}}