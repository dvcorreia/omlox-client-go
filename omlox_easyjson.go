// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  omlox

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Fence ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Fence ) UnmarshalJSON([]byte) error { return nil }
func ( Fence ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Fence ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Fence *Fence

func ( Location ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Location ) UnmarshalJSON([]byte) error { return nil }
func ( Location ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Location ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Location *Location

func ( LocationProvider ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* LocationProvider ) UnmarshalJSON([]byte) error { return nil }
func ( LocationProvider ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* LocationProvider ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_LocationProvider *LocationProvider

func ( Trackable ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Trackable ) UnmarshalJSON([]byte) error { return nil }
func ( Trackable ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Trackable ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Trackable *Trackable

func ( WebsocketError ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* WebsocketError ) UnmarshalJSON([]byte) error { return nil }
func ( WebsocketError ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* WebsocketError ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_WebsocketError *WebsocketError

func ( WrapperObject ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* WrapperObject ) UnmarshalJSON([]byte) error { return nil }
func ( WrapperObject ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* WrapperObject ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_WrapperObject *WrapperObject
